# -*- org-confirm-babel-evaluate: nil -*-
#+REVEAL_ROOT: ./src/reveal.js/
#+REVEAL_INIT_OPTIONS: transition:fade'
#+REVEAL_THEME: simple
#+REVEAL_DEFAULT_SLIDE_BACKGROUND: ./images/background_1.jpg
#+REVEAL_TITLE_SLIDE_BACKGROUND: ./images/background_1.jpg
#+OPTIONS: toc:nil
#+OPTIONS: num:nil
#+REVEAL_EXTRA_CSS: org.css
#+REVEAL_MULTIPLEX_ID: bd48dc06640f14b9
#+REVEAL_MULTIPLEX_SECRET: 15841015407773172823
#+REVEAL_MULTIPLEX_URL: https://reveal-js-multiplex-ccjbegmaii.now.sh:443
#+REVEAL_MULTIPLEX_SOCKETIO_URL: https://cdnjs.cloudflare.com/ajax/libs/socket.io/1.0.6/socket.io.min.js
#+REVEAL_PLUGINS: (notes multiplex highlight)
#+REVEAL_HIGHLIGHT_CSS: https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.18.1/build/styles/github.min.css

#+TITLE: SunPy: Python for Solar Physics
#+AUTHOR: Stuart Mumford
#+REVEAL_TITLE_SLIDE: <h3>%t</h3>
#+REVEAL_TITLE_SLIDE: <h4>%a</h4>
#+REVEAL_TITLE_SLIDE: <h5>Slides: <a href="https://astrax.cadair.dev/">astrax.cadair.dev</a></h5>
#+REVEAL_TITLE_SLIDE: <a href="https://aperio.software"><img style='float: left; width: 30%%; margin-top: 100px; height: 25%%;' src='images/aperio.svg'/></a><a href="https://sheffield.ac.uk"><img style='float: right; width: 30%%; margin-top: 100px; height: 25%%;' src='images/TUOS_Logo_CMYK_Keyline.svg'/></a><a href="https://sunpy.org"><img style='float: right; width: 30%%; margin-top: 100px; height: 25%%; margin-right: 5%%;' src='images/sunpy.svg'/></a>

#+begin_notes

Go to that URL to follow along with my slides and to be able to click on links etc.

#+end_notes

* Me

I am the Lead Developer of SunPy.
I work for the National Solar Observatory in the DKI Solar Telescope Data Centre.
I also am a maintainer of ~astropy.visualization~, and have been seen contributing to the matrix ecosystem, mainly the Slack bridge.

#+REVEAL_HTML: <div class='left'>

Find me online:

- [[http://stuartmumford.uk][stuartmumford.uk]]
- [[https://matrix.to/#/@cadair:cadair.com][@cadair:cadair.com]] on [[https://matrix.org][Matrix]]
- [[https://github.com/Cadair][@Cadair]] on GitHub
- [[https://twitter.com/stuartmumford][@stuartmumford]] on Twitter

#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class='right'>

#+attr_html: :width 300px
[[./images/cadair.jpg]]

#+REVEAL_HTML: </div>

#+begin_notes

Hello!

I work for DKIST, a 4m Solar Telescope under construction on Maui.

I contribute to Astropy for SunPy and DKIST.

Everyone should use matrix.

I am also known as Cadair. Cadair Idris is a mountain in Snowdonia Wales and this is me on its summit.

#+end_notes

* What is SunPy?

It's a Python library
#+BEGIN_QUOTE
A community-developed, free and open-source solar data analysis environment for Python.
#+END_QUOTE

#+begin_notes

SunPy was started around 2011, I have been involved since shortly after the 0.1 release.

I saw the release announcement on Twitter one morning and it ate the next ~8 years of my life.
#+end_notes

** 

... but not just one library
#+BEGIN_QUOTE
A project to facilitate and promote the use and development of a community-led, free and open-source solar data-analysis software based on the scientific Python environment
#+END_QUOTE

#+REVEAL_HTML: <div class='left3'>

#+attr_html: :height 200px
[[./images/sunpy_icon.svg]]

SunPy Core

#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class='center3'>

#+attr_html: :height 175px
[[./images/ndcube.png]]

NDCube

#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class='right3'>

  * [[https://github.com/sunpy/drms][drms]]
  * [[https://github.com/sunpy/radiospectra][radiospectra]]
  * [[https://github.com/sunpy/ablog][ablog]]
  * [[https://github.com/sunpy/sunraster][sunraster]]
  * [[https://github.com/sunpy/sunkit-image][sunkit-image]]
  * [[https://github.com/sunpy/sunpy-sphinx-theme][sunpy-sphinx-theme]]
  * [[https://github.com/sunpy/sunpy.org][sunpy.org]]

#+REVEAL_HTML: </div>

*** 
  :PROPERTIES:
  :reveal_background: ./images/sunpy_github.png
  :reveal_background_trans: slide
  :reveal_background_position: top
  :END:

#+begin_notes
Python:

    ndcube
    drms
    radiospectra
    ablog
    irispy
    sunkit-image

CSS/HTML:

    sunpy-sphinx-theme
    sunpy.org

#+end_notes
# AIA
* 
  :PROPERTIES:
  :reveal_background: ./images/fulldiskmulticolor.jpg
  :reveal_background_trans: slide
  :END:

#+BEGIN_NOTES
I promised pretty pictures of the Sun, so let's start with one of my favourites.

This is a NASA/SDO/AIA image which is a RGB composite of the solar corona in three passbands.
#+END_NOTES

** Getting AIA Data

#+BEGIN_SRC python :session map1 :exports none
import matplotlib
matplotlib.use('Agg')

import matplotlib.pyplot as plt

import astropy.units as u
#+END_SRC


#+BEGIN_SRC python :session map1 :exports both
from sunpy.net import Fido, attrs as a
import sunpy.map

results = Fido.search(a.Instrument("AIA"), a.Time("2020/03/06", "2020/03/06T00:00:11"),
                      a.Wavelength(1*u.nm, 40*u.nm))
results

#+END_SRC

#+RESULTS:
#+begin_example
Results from 1 Provider:

7 Results from the VSOClient:
   Start Time [1]       End Time [1]    Source ...   Type   Wavelength [2]
                                               ...             Angstrom   
------------------- ------------------- ------ ... -------- --------------
2020-03-06 00:00:00 2020-03-06 00:00:01    SDO ... FULLDISK 335.0 .. 335.0
2020-03-06 00:00:04 2020-03-06 00:00:05    SDO ... FULLDISK 193.0 .. 193.0
2020-03-06 00:00:05 2020-03-06 00:00:06    SDO ... FULLDISK 304.0 .. 304.0
2020-03-06 00:00:06 2020-03-06 00:00:07    SDO ... FULLDISK 131.0 .. 131.0
2020-03-06 00:00:09 2020-03-06 00:00:10    SDO ... FULLDISK 171.0 .. 171.0
2020-03-06 00:00:09 2020-03-06 00:00:10    SDO ... FULLDISK 211.0 .. 211.0
2020-03-06 00:00:11 2020-03-06 00:00:12    SDO ... FULLDISK   94.0 .. 94.0

#+end_example

#+begin_notes
This shows how you can use SunPy to download the data from the instrument that made this image.

AIA observes in 7 passbands every 12 seconds (and 3 more at lower cadence), and returns 4kx4k images, that's over 1Tb of data a day.

Here we have searched the Virtual Solar Observatory for a 12s window and all of the EUV passbands.
#+end_notes

** 


#+BEGIN_SRC python :session map1 :results file :exports code
files = Fido.fetch(results[0, 4])

aia_map = sunpy.map.Map(files)

aia_map.peek()
#+END_SRC

#+BEGIN_SRC python :session map1 :results file :exports results
plt.savefig("images/aia_map_1.png", transparent=True)
"images/aia_map_1.png"
#+END_SRC

#+RESULTS:
[[file:images/aia_map_1.png]]

#+begin_notes

Here we download the 17.1nm image (the 5th in the list) and then load it with ~sunpy.map~ and quick view it.
#+end_notes


* Open Development

#+BEGIN_QUOTE
SunPy is built *by* and *for* the community.  All our code and project-level decisions are made in publicly-visible spaces, and we are open to input from our community for these decisions.
#+END_QUOTE

Anyone can contribute, big, or small, code or other things. We try our hardest to encourage all contributions.


** Types of Contribution

#+REVEAL_HTML: <div class='left'>

#+ATTR_REVEAL: :frag (appear)
  * Using SunPy, and telling us about it.
  * Code.
  * Documentation.
  * Answering questions in chat / on mailing lists.
  * Writing blog posts.
  * Writing examples based on your work.
  * Maintaining the CI etc infrastructure.
  * Writing an Affiliated Package.
  * Filling a [[https://sunpy.org/project/roles][Community Role]].
  * Serving on the project's board.

#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class='right'>

[[./images/sunpy_package_novice.png]]

https://sunpy.org/novice-issues

#+REVEAL_HTML: </div>

#+begin_notes

You DO NOT have to contribute code to contribute to an open project.

There are loads of different ways you can help.

#+end_notes


** Community

#+REVEAL_HTML: <div class='left'>

Come say Hi!

  * Riot / Matrix chat.
  * sunpy & sunpy-dev @googlegroups.com mailing lists
  * Twitter [[https://twitter.com/SunPyProject][@SunPyProject]]
  * Weekly community calls (Wednesday 1600 or 1700 UTC)

#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class='right'>

[[https://riot.im/app/#/room/#sunpy:openastronomy.org][#sunpy:openastronomy.org]] on [[https://matrix.org][Matrix]]
[[./images/sunpy_riot.png]]

#+REVEAL_HTML: </div>


* Open Governance

https://github.com/sunpy/sunpy-SEP

#+attr_html: :height 500px
[[./images/sunpy_sep.png]]



** SunPy Board
https://sunpy.org/project/

#+attr_html: :height 500px
[[./images/sunpy_board.png]]

* 
  :PROPERTIES:
  :reveal_background: ./images/repro_comp.png
  :END:

#+BEGIN_SRC python :session repro :exports none
import matplotlib
matplotlib.use('Agg')

import matplotlib.pyplot as plt

import astropy.units as u

from reprojection_example import maps

from sunpy.coordinates import get_body_heliographic_stonyhurst
#+END_SRC

#+RESULTS:


** Satellite Coordinates

#+BEGIN_SRC python :session repro :exports none :results output
fig_c = plt.figure(figsize=(5, 5))

ax = plt.subplot(projection='polar')
#+END_SRC

#+RESULTS:

#+BEGIN_SRC python :session repro :exports none :results output
earth = get_body_heliographic_stonyhurst('earth', maps[0].date)
circle = plt.Circle((0.0, 0.0), (10 * u.Rsun).to_value(u.AU),
                    transform=ax.transProjectionAffine + ax.transAxes, color="yellow",
                    alpha=1, label="Sun")
ax.add_artist(circle)
ax.text(earth.lon.to_value("rad")+0.05, earth.radius.to_value(u.AU), "Earth")

for this_satellite, this_coord in [(m.observatory, m.observer_coordinate) for m in maps]:
    plt.polar(this_coord.lon.to('rad'), this_coord.radius.to(u.AU), 'o', label=this_satellite)
#+END_SRC

#+RESULTS:

#+BEGIN_SRC python :session repro :results file :exports results
ax.set_theta_zero_location("S")
ax.set_rlim(0, 1.3)

fig_c.savefig("images/coords_1.png", transparent=True)
"images/coords_1.png"
#+END_SRC

#+RESULTS:
[[file:images/coords_1.png]]


** Planetary Coordinates and Images

#+BEGIN_SRC python :session venus :exports none :results output
import matplotlib
matplotlib.use('Agg')

import matplotlib.pyplot as plt

import astropy.units as u
from astropy.coordinates import SkyCoord
from astropy.coordinates import solar_system_ephemeris
solar_system_ephemeris.set('de432s')

from sunpy.net import Fido, attrs as a
import sunpy.map
from sunpy.coordinates import get_body_heliographic_stonyhurst

result = Fido.search(a.Time('2012/06/06 04:07:25', '2012/06/06 04:07:35'),
                     a.Instrument('aia'),
                     a.Wavelength(304*u.angstrom))

venus_transit_file = Fido.fetch(result)[0]
#+END_SRC

#+RESULTS:
: Python 3.8.2 (default, Feb 26 2020, 22:21:03) 
: [GCC 9.2.1 20200130] on linux
: Type "help", "copyright", "credits" or "license" for more information.
: Files Downloaded:   0% 0/1 [00:00<?, ?file/s]Files Downloaded: 100% 1/1 [00:01<00:00,  1.07s/file]Files Downloaded: 100% 1/1 [00:01<00:00,  1.07s/file]
: python.el: native completion setup loaded

#+BEGIN_SRC python :session venus :exports both
aiamap = sunpy.map.Map(venus_transit_file)

venus = get_body_heliographic_stonyhurst('venus', aiamap.date,
                                         observer=aiamap.observer_coordinate)
venus_hpc = venus.transform_to(aiamap.coordinate_frame)
venus_hpc
#+END_SRC

#+RESULTS:
: <Helioprojective Coordinate (obstime=2012-06-06T04:07:32.130, rsun=696000000.0 m, observer=<HeliographicStonyhurst Coordinate (obstime=2012-06-06T04:07:32.130): (lon, lat, radius) in (deg, deg, m)
:     (-0.01206195, -0.00151094, 1.51827584e+11)>): (Tx, Ty, distance) in (arcsec, arcsec, km)
:     (753.79049542, 484.63971008, 43212248.73488458)>

*** 

#+BEGIN_SRC python :session venus :exports code :results output
fov = 100 * u.arcsec
top_right = SkyCoord(venus_hpc.Tx + fov, venus_hpc.Ty + fov,
                     frame=aiamap.coordinate_frame)
bottom_left = SkyCoord(venus_hpc.Tx - fov, venus_hpc.Ty - fov,
                       frame=aiamap.coordinate_frame)

venus_map = aiamap.submap(top_right, bottom_left)


ax = plt.subplot(projection=venus_map)

venus_map.plot()
ax.plot_coord(venus_hpc, 'x', color='white', markersize=10)
#+END_SRC

#+RESULTS:

*** 

#+BEGIN_SRC python :session venus :results file :exports results
plt.savefig("images/aia_map_venus.png", transparent=True)
"images/aia_map_venus.png"
#+END_SRC

#+RESULTS:
[[file:images/aia_map_venus.png]]

https://docs.sunpy.org/en/latest/generated/gallery/units_and_coordinates/venus_transit.html


* Contributing Code

** 
  :PROPERTIES:
  :reveal_background:
  :reveal_extra_attr: data-background-iframe="https://docs.sunpy.org/en/latest/dev_guide/newcomers.html#code" data-background-interactive
  :END:


** What to do

https://docs.sunpy.org/en/latest/dev_guide/newcomers.html#code


#+REVEAL_HTML: <div class='left'>

#+ATTR_REVEAL: :frag (appear)
  * Get a Python development environment setup.
    * conda or virtualenv etc.
    * 3.6+ Python
    * C compiler + toolchain
  * Fork then Clone the sunpy repo
   * Always good to learn git
  * Run the tests ~tox -e py38~
  * Make a git branch and edit some code
  * Re-run the tests
  * Open a Pull Request

#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class='right'>

[[./images/sunpy_pr_simple.png]]

#+REVEAL_HTML: </div>


** What to Expect

#+REVEAL_HTML: <div class='left'>

#+ATTR_REVEAL: :frag (appear)
  * A friendly reception.
  * A lot of comments!!
  * Iteration and improvement.
  * Attribution.
  * Eternal gratitude.

#+REVEAL_HTML: </div>
#+REVEAL_HTML: <div class='right'>
[[./images/sunpy_pr_comments.png]]
#+REVEAL_HTML: </div>

# DKIST
* 
  :PROPERTIES:
  :reveal_background:
  :reveal_extra_attr: data-background-video="./images/Inouye-First-Light-zoom-loop_FHD-H264.mp4" data-background-video-loop
  :END:

#+BEGIN_NOTES
This is the first data released from the DKI Solar Telescope.

The cell-like structures -- each about the size of Texas -- are the signature of violent motions that transport heat from the inside of the Sun to its surface. That hot solar plasma rises in the bright centers of “cells,” cools off and then sinks below the surface in dark lanes in a process known as convection.
#+END_NOTES

* Get Involved!


Contributing to an open source project such as SunPy or Astropy is great fun, people are friendly and helpful.

Come say hello in chat, and see if you can find something that excites you to work on!


Thanks!

# DKIST
* Questions!
  :PROPERTIES:
  :reveal_background:
  :reveal_extra_attr: data-background-video="./images/Inouye-First-Light-zoom-loop_FHD-H264.mp4" data-background-video-loop
  :END:
